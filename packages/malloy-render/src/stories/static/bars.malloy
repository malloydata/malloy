source: products is duckdb.table("data/products.parquet") extend {
  measure: total_sales is retail_price.sum()
  measure: avg_margin is avg(retail_price - cost)
  dimension: product is name

  # bar_chart
  view: topSellingBrands is {
    group_by: brand
    aggregate: `Sales $` is retail_price.avg()*500
    limit: 10
  }

  # bar_chart
  view: topSellingBrandsTest is {
    group_by: brand
    aggregate: `Sales $` is retail_price.avg()*500
    limit: 10
  }

  view: test is {
    nest: topSellingBrands
  }


  view: sparks is {
    group_by: category
    # currency
    aggregate: `Avg Retail` is retail_price.avg()
    nest:
    # size="spark"
    `Top Brands` is topSellingBrands
  }

  view: trailing_12_sales_trend is {
    group_by: brand
    aggregate: `Sales $` is retail_price.avg()*500
    limit: 12
    order_by: 1
  }

  view: sparks_nested is {
    group_by: `Department` is department
    # currency
    aggregate: `Avg Retail` is retail_price.avg()
    nest:
      `Top 5 Categories` is {
        group_by: category
        limit: 5
        # currency
        aggregate: `Avg Retail` is retail_price.avg()
        # bar_chart size="spark"
        nest: `Trailing 12mo Sales` is trailing_12_sales_trend
      }
  }

  view: category_bar is {
    limit: 2
    group_by: category
    # currency
    aggregate: `Avg Retail` is retail_price.avg()

    nest:
    `Top Departments` is {
      group_by: department
      # currency
      aggregate: `Avg Retail` is retail_price.avg()
      limit: 5
    }
    # size=lg
    `Top Selling Brands` is topSellingBrands
    `Top Products` is {
      group_by: name
      # currency
      aggregate: `Sales` is retail_price.avg()
      limit: 10
    }
    # size=spark
    spark is topSellingBrands
    # size=sm
    sm is topSellingBrands
    # size=md
    md is topSellingBrands
    # size=lg
    lg is topSellingBrands
    # size=xl
    xl is topSellingBrands
    # size=2xl
    `2xl` is topSellingBrands
  }

  view: nested_test is {
    group_by: category
    aggregate: avg_retail is retail_price.avg()
    nest:
      # bar_chart size=lg
      # size.height=220 size.width=300
      nested_column_1 is {
        group_by: brand
        aggregate: avg_retail is retail_price.avg()
        limit: 10
      }
      # bar_chart size=lg
      # size.height=220 size.width=300
      nested_column_2 is {
        group_by: brand
        aggregate: avg_retail is retail_price.avg()
        limit: 10
      }
      nested_column_3 is {
        group_by: brand
        aggregate: avg_retail is retail_price.avg()
        limit: 10
      }
    limit: 2
  }


  view: nested is {
    group_by: category
    aggregate: avg_retail is retail_price.avg()
    nest:
      # bar_chart size=lg
      # size.height=220 size.width=300
      nested_column_1 is {
        group_by: brand
        aggregate: avg_retail is retail_price.avg()
        limit: 10
      }
      # bar_chart size=lg
      # size.height=220 size.width=300
      nested_column_2 is {
        group_by: brand
        aggregate: avg_retail is retail_price.avg()
        limit: 10
      }
      nested_column_3 is {
        group_by: brand
        aggregate: avg_retail is retail_price.avg()
        limit: 10
      }
      another_nested is {
        group_by: department
        aggregate: avg_retail is retail_price.avg()
        # bar_chart
        nest:
          deeply_nested is {
            group_by: `sku`
            aggregate: total_cost is cost.sum()
            limit: 3
          }
        limit: 5
      }
      record is {
        nest: nested_record is {
          group_by: id
          aggregate: total_cost is cost.sum()
          limit: 5
        }
      }
      another_nested2 is {
        group_by: department
        aggregate: avg_retail is retail_price.avg()
        nest: deeply_nested is {
          group_by: `sku`
          aggregate: total_cost is cost.sum()
          limit: 3
        }
        limit: 5
      }
  }
}