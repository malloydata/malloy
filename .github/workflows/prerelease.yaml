name: npmjs.com Pre-release

on:
  push:
    branches:
      - main

jobs:
  db-bigquery:
    uses: './.github/workflows/db-bigquery.yaml'
    secrets:
      BIGQUERY_KEY: ${{ secrets.BIGQUERY_KEY }}
  db-motherduck:
    uses: './.github/workflows/db-motherduck.yaml'
    secrets:
      MOTHERDUCK_TOKEN: ${{ secrets.MOTHERDUCK_TOKEN }}
  db-postgres:
    uses: './.github/workflows/db-postgres.yaml'
  db-snowflake:
    uses: './.github/workflows/db-snowflake.yaml'
    secrets:
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
  main:
    uses: './.github/workflows/main.yaml'

  npm-prerelease:
    needs:
      - db-bigquery
      - db-motherduck
      - db-postgres
      - db-snowflake
      - main
    runs-on: ubuntu-latest
    env:
      PACKAGES: 'packages/malloy-interfaces packages/malloy packages/malloy-db-bigquery packages/malloy-db-duckdb packages/malloy-db-postgres packages/malloy-db-snowflake packages/malloy-db-trino packages/malloy-render packages/malloy-malloy-sql test packages/malloy-syntax-highlight'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - name: npm install, build, and publish
        run: |
          npm ci --loglevel error
          npm run build
          echo Publishing $PACKAGES
          PRERELEASE=$(date +%y%m%d%H%M%S)
          VERSION=$(jq -r .version ./lerna.json)-dev$PRERELEASE
          npx lerna version $VERSION --yes --no-push --no-git-tag-version
          for package in $PACKAGES; do
            echo Publishing $package $VERSION
            npm publish --dry-run -w $package --access=public --tag next
          done
        env:
          CI: true
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
