name: npmjs.com Pre-release

on:
  workflow_dispatch:

jobs:
  db-bigquery:
    uses: './.github/workflows/db-bigquery.yaml'
    secrets:
      BIGQUERY_KEY: ${{ secrets.BIGQUERY_KEY }}
  db-motherduck:
    uses: './.github/workflows/db-motherduck.yaml'
    secrets:
      MOTHERDUCK_TOKEN_10: ${{ secrets.MOTHERDUCK_TOKEN_10 }}
  db-postgres:
    uses: './.github/workflows/db-postgres.yaml'
  db-snowflake:
    uses: './.github/workflows/db-snowflake.yaml'
    secrets:
      SNOWFLAKE_CONNECTION: ${{ secrets.SNOWFLAKE_CONNECTION }}
  main:
    uses: './.github/workflows/main.yaml'
    secrets:
      BIGQUERY_KEY: ${{ secrets.BIGQUERY_KEY }}

  npm-prerelease:
    needs:
      - db-bigquery
      - db-motherduck
      - db-postgres
      - db-snowflake
      - main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: npm install, build, and publish
        run: |
          npm ci --loglevel error
          npm run build
          PACKAGES=$(jq -r '.workspaces.packages[]' ./package.json | xargs echo)
          echo Publishing $PACKAGES
          PRERELEASE=$(date +%y%m%d%H%M%S)
          CLEAN_BRANCH_NAME=$(echo $BRANCH_NAME | sed -e 's/\//-/')
          VERSION=$(jq -r .version ./lerna.json)-$CLEAN_BRANCH_NAME-$PRERELEASE
          jq 'del(.command)' ./lerna.json > ./lerna.json
          npx lerna version $VERSION --yes --no-push --no-git-tag-version
          for package in $PACKAGES; do
            echo Publishing $package $VERSION
            npm publish --dry-run -w $package --access=public --tag next
          done
        env:
          CI: true
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || 'dev' }}
